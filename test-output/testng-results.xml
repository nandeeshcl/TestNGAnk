<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="28" started-at="2020-04-02T12:16:04Z" finished-at="2020-04-02T12:16:04Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="28" started-at="2020-04-02T12:16:04Z" finished-at="2020-04-02T12:16:04Z">
      <class name="reflectionpackage.Reflections">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void reflectionpackage.Reflections.userCreate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="userCreate()[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="userCreate" duration-ms="5" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreate -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCreate status=SUCCESS method=Reflections.userCreate()[pri:0, instance:reflectionpackage.Reflections@5f375618] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="userDelete()[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="userDelete" duration-ms="1" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDelete -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void reflectionpackage.Reflections.userDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:reflectionpackage.Reflections@5f375618]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-04-02T17:46:04Z" finished-at="2020-04-02T17:46:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userDelete status=SUCCESS method=Reflections.userDelete()[pri:0, instance:reflectionpackage.Reflections@5f375618] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- reflectionpackage.Reflections -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
